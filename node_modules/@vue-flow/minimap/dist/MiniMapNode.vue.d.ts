declare const _default: import('vue').DefineComponent<
  {
    id: {
      type: import('vue').PropType<string>
      required: true
    }
    type: {
      type: import('vue').PropType<string>
      required: true
    }
    selected: {
      type: import('vue').PropType<boolean>
    }
    dragging: {
      type: import('vue').PropType<boolean>
    }
    position: {
      type: import('vue').PropType<import('@vue-flow/core').XYPosition>
      required: true
    }
    dimensions: {
      type: import('vue').PropType<import('@vue-flow/core').Dimensions>
      required: true
    }
    borderRadius: {
      type: import('vue').PropType<number>
    }
    color: {
      type: import('vue').PropType<string>
    }
    shapeRendering: {
      type: import('vue').PropType<import('csstype').Property.ShapeRendering>
    }
    strokeColor: {
      type: import('vue').PropType<string>
    }
    strokeWidth: {
      type: import('vue').PropType<number>
    }
  },
  {},
  unknown,
  {},
  {},
  import('vue').ComponentOptionsMixin,
  import('vue').ComponentOptionsMixin,
  {
    click: (params: MouseEvent) => void
    dblclick: (params: MouseEvent) => void
    mouseenter: (params: MouseEvent) => void
    mousemove: (params: MouseEvent) => void
    mouseleave: (params: MouseEvent) => void
  },
  string,
  import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps,
  Readonly<
    import('vue').ExtractPropTypes<{
      id: {
        type: import('vue').PropType<string>
        required: true
      }
      type: {
        type: import('vue').PropType<string>
        required: true
      }
      selected: {
        type: import('vue').PropType<boolean>
      }
      dragging: {
        type: import('vue').PropType<boolean>
      }
      position: {
        type: import('vue').PropType<import('@vue-flow/core').XYPosition>
        required: true
      }
      dimensions: {
        type: import('vue').PropType<import('@vue-flow/core').Dimensions>
        required: true
      }
      borderRadius: {
        type: import('vue').PropType<number>
      }
      color: {
        type: import('vue').PropType<string>
      }
      shapeRendering: {
        type: import('vue').PropType<import('csstype').Property.ShapeRendering>
      }
      strokeColor: {
        type: import('vue').PropType<string>
      }
      strokeWidth: {
        type: import('vue').PropType<number>
      }
    }>
  > & {
    onClick?: ((params: MouseEvent) => any) | undefined
    onDblclick?: ((params: MouseEvent) => any) | undefined
    onMouseenter?: ((params: MouseEvent) => any) | undefined
    onMousemove?: ((params: MouseEvent) => any) | undefined
    onMouseleave?: ((params: MouseEvent) => any) | undefined
  },
  {},
  {}
>
export default _default
